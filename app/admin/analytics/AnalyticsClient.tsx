"use client";

import { motion } from "framer-motion";
import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, BarChart, Bar } from 'recharts';

interface UserGrowthData {
  date: string;
  count: number;
}

interface PlanDistribution {
  planTier: string;
  _count: {
    planTier: number;
  };
}

interface PlaybookStats {
  status: string;
  _count: {
    status: number;
  };
}

interface RecentActivity {
  id: string;
  title: string;
  status: string;
  createdAt: Date;
  user: {
    email: string;
    planTier: string;
  };
  stakeholder: {
    name: string;
  };
}

interface Props {
  userGrowth: UserGrowthData[];
  planDistribution: PlanDistribution[];
  playbookStats: PlaybookStats[];
  recentActivity: RecentActivity[];
}

const COLORS = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6'];

export default function AnalyticsClient({ userGrowth, planDistribution, playbookStats, recentActivity }: Props) {
  // Process data for charts
  const chartData = userGrowth.map(item => ({
    date: new Date(item.date).toLocaleDateString('en-US', { month: 'short', day: 'numeric' }),
    users: item.count
  }));

  const planData = planDistribution.map(item => ({
    name: item.planTier,
    value: item._count.planTier,
    percentage: ((item._count.planTier / planDistribution.reduce((sum, p) => sum + p._count.planTier, 0)) * 100).toFixed(1)
  }));

  const statusData = playbookStats.map(item => ({
    name: item.status.replace('_', ' '),
    value: item._count.status
  }));

  const totalUsers = planDistribution.reduce((sum, p) => sum + p._count.planTier, 0);
  const totalPlaybooks = playbookStats.reduce((sum, p) => sum + p._count.status, 0);
  const paidUsers = planDistribution.filter(p => p.planTier !== 'FREE').reduce((sum, p) => sum + p._count.planTier, 0);
  const conversionRate = totalUsers > 0 ? ((paidUsers / totalUsers) * 100).toFixed(1) : '0';

  return (
    <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
      {/* Header */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        className="mb-8"
      >
        <h1 className="text-3xl font-bold text-white mb-2">Analytics Dashboard</h1>
        <p className="text-slate-400">Monitor user growth, engagement, and conversion metrics</p>
      </motion.div>

      {/* Key Metrics */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.1 }}
        className="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8"
      >
        <div className="bg-slate-800 rounded-lg p-6 border border-slate-700">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-slate-400 text-sm font-medium">Total Users</p>
              <p className="text-2xl font-bold text-white mt-1">{totalUsers}</p>
              <p className="text-green-400 text-xs mt-1">+{userGrowth.reduce((sum, day) => sum + day.count, 0)} this month</p>
            </div>
            <div className="bg-blue-600 rounded-lg p-3">
              <span className="text-2xl">ðŸ‘¥</span>
            </div>
          </div>
        </div>

        <div className="bg-slate-800 rounded-lg p-6 border border-slate-700">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-slate-400 text-sm font-medium">Conversion Rate</p>
              <p className="text-2xl font-bold text-white mt-1">{conversionRate}%</p>
              <p className="text-slate-400 text-xs mt-1">{paidUsers} paid users</p>
            </div>
            <div className="bg-green-600 rounded-lg p-3">
              <span className="text-2xl">ðŸ’°</span>
            </div>
          </div>
        </div>

        <div className="bg-slate-800 rounded-lg p-6 border border-slate-700">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-slate-400 text-sm font-medium">Total Playbooks</p>
              <p className="text-2xl font-bold text-white mt-1">{totalPlaybooks}</p>
              <p className="text-slate-400 text-xs mt-1">Generated by users</p>
            </div>
            <div className="bg-purple-600 rounded-lg p-3">
              <span className="text-2xl">ðŸ“‹</span>
            </div>
          </div>
        </div>

        <div className="bg-slate-800 rounded-lg p-6 border border-slate-700">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-slate-400 text-sm font-medium">Avg Playbooks/User</p>
              <p className="text-2xl font-bold text-white mt-1">
                {totalUsers > 0 ? (totalPlaybooks / totalUsers).toFixed(1) : '0'}
              </p>
              <p className="text-slate-400 text-xs mt-1">Engagement metric</p>
            </div>
            <div className="bg-orange-600 rounded-lg p-3">
              <span className="text-2xl">ðŸ“Š</span>
            </div>
          </div>
        </div>
      </motion.div>

      {/* Charts Grid */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8 mb-8">
        {/* User Growth Chart */}
        <motion.div
          initial={{ opacity: 0, x: -20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.2 }}
          className="bg-slate-800 rounded-lg p-6 border border-slate-700"
        >
          <h2 className="text-lg font-semibold text-white mb-4">User Growth (Last 30 Days)</h2>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <LineChart data={chartData}>
                <CartesianGrid strokeDasharray="3 3" stroke="#374151" />
                <XAxis dataKey="date" stroke="#9CA3AF" />
                <YAxis stroke="#9CA3AF" />
                <Tooltip 
                  contentStyle={{ 
                    backgroundColor: '#1F2937', 
                    border: '1px solid #374151',
                    borderRadius: '8px',
                    color: '#F9FAFB'
                  }} 
                />
                <Line type="monotone" dataKey="users" stroke="#3B82F6" strokeWidth={2} />
              </LineChart>
            </ResponsiveContainer>
          </div>
        </motion.div>

        {/* Plan Distribution */}
        <motion.div
          initial={{ opacity: 0, x: 20 }}
          animate={{ opacity: 1, x: 0 }}
          transition={{ delay: 0.3 }}
          className="bg-slate-800 rounded-lg p-6 border border-slate-700"
        >
          <h2 className="text-lg font-semibold text-white mb-4">Plan Distribution</h2>
          <div className="h-64">
            <ResponsiveContainer width="100%" height="100%">
              <PieChart>
                <Pie
                  data={planData}
                  cx="50%"
                  cy="50%"
                  labelLine={false}
                  label={({ name, percentage }) => `${name} (${percentage}%)`}
                  outerRadius={80}
                  fill="#8884d8"
                  dataKey="value"
                >
                  {planData.map((entry, index) => (
                    <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />
                  ))}
                </Pie>
                <Tooltip 
                  contentStyle={{ 
                    backgroundColor: '#1F2937', 
                    border: '1px solid #374151',
                    borderRadius: '8px',
                    color: '#F9FAFB'
                  }} 
                />
              </PieChart>
            </ResponsiveContainer>
          </div>
        </motion.div>
      </div>

      {/* Playbook Status Chart */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.4 }}
        className="bg-slate-800 rounded-lg p-6 border border-slate-700 mb-8"
      >
        <h2 className="text-lg font-semibold text-white mb-4">Playbook Status Distribution</h2>
        <div className="h-64">
          <ResponsiveContainer width="100%" height="100%">
            <BarChart data={statusData}>
              <CartesianGrid strokeDasharray="3 3" stroke="#374151" />
              <XAxis dataKey="name" stroke="#9CA3AF" />
              <YAxis stroke="#9CA3AF" />
              <Tooltip 
                contentStyle={{ 
                  backgroundColor: '#1F2937', 
                  border: '1px solid #374151',
                  borderRadius: '8px',
                  color: '#F9FAFB'
                }} 
              />
              <Bar dataKey="value" fill="#10B981" />
            </BarChart>
          </ResponsiveContainer>
        </div>
      </motion.div>

      {/* Recent Activity */}
      <motion.div
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.5 }}
        className="bg-slate-800 rounded-lg border border-slate-700"
      >
        <div className="p-6 border-b border-slate-700">
          <h2 className="text-xl font-semibold text-white">Recent Playbook Activity</h2>
        </div>
        
        <div className="overflow-x-auto">
          <table className="w-full">
            <thead className="bg-slate-700">
              <tr>
                <th className="px-6 py-3 text-left text-xs font-medium text-slate-300 uppercase tracking-wider">
                  Playbook
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-slate-300 uppercase tracking-wider">
                  User
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-slate-300 uppercase tracking-wider">
                  Plan
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-slate-300 uppercase tracking-wider">
                  Status
                </th>
                <th className="px-6 py-3 text-left text-xs font-medium text-slate-300 uppercase tracking-wider">
                  Created
                </th>
              </tr>
            </thead>
            <tbody className="divide-y divide-slate-700">
              {recentActivity.slice(0, 20).map((activity, index) => (
                <motion.tr
                  key={activity.id}
                  initial={{ opacity: 0, x: -20 }}
                  animate={{ opacity: 1, x: 0 }}
                  transition={{ delay: 0.5 + index * 0.02 }}
                  className="hover:bg-slate-700 transition-colors"
                >
                  <td className="px-6 py-4 whitespace-nowrap">
                    <div>
                      <p className="text-sm font-medium text-white line-clamp-1">{activity.title}</p>
                      <p className="text-xs text-slate-400">{activity.stakeholder.name}</p>
                    </div>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <p className="text-sm text-slate-300">{activity.user.email}</p>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <span className={`px-2 py-1 rounded text-xs font-medium ${
                      activity.user.planTier === 'DIRECTOR' ? 'bg-purple-600 text-white' :
                      activity.user.planTier === 'PRO' ? 'bg-blue-600 text-white' :
                      'bg-slate-600 text-slate-300'
                    }`}>
                      {activity.user.planTier}
                    </span>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap">
                    <span className={`px-2 py-1 rounded text-xs font-medium ${
                      activity.status === 'COMPLETED' ? 'bg-green-600 text-white' :
                      activity.status === 'IN_PROGRESS' ? 'bg-yellow-600 text-white' :
                      'bg-slate-600 text-slate-300'
                    }`}>
                      {activity.status.replace('_', ' ')}
                    </span>
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-slate-400">
                    {new Date(activity.createdAt).toLocaleDateString()}
                  </td>
                </motion.tr>
              ))}
            </tbody>
          </table>
        </div>
      </motion.div>
    </div>
  );
}
